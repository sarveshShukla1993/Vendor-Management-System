@model VendorManagementSystem.ProjectViewModel.VendorViewModel
@using VendorManagementSystem.Models
@{
    ViewBag.Title = "vendor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<head>
    <link href="~/Content/Margin.css" rel="stylesheet" />
    <style>
    </style>
</head>
<body>

    <ol class="breadcrumb">
        <li><a href="HomePage">VMSHome</a></li>
        <li class="active">PersonalDetails</li>
    </ol>


    <div id="mrgn">
        <h2>
            Vendor Registration
        </h2>
            <h6>#Contact number must be numeric value of 10 digits</h6>
    </div>
    <div id="vbm">
        @if(ViewBag.value != null)
        {
        @ViewBag.value;
        }
        </div>
    <div id="bdymrgn">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.VendorName,"User Name ", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-9" id="disfromlabel">
                        @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control", @id = "numb" } })
                        @Html.ValidationMessageFor(model => model.VendorName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VendorEmail,"User Email", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                     <div class="col-md-9" id="disfromlabel">
                        @Html.EditorFor(model => model.VendorEmail, new { htmlAttributes = new { @class = "form-control", @id = "emlfocus" } })
                         @Html.ValidationMessageFor(model => model.VendorEmail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VendorContact,"User Phone", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-9" id="disfromlabel">
                        @Html.EditorFor(model => model.VendorContact,"Contact Number", new { htmlAttributes = new { @class = "form-control", @id = "alpha"} })
                        @Html.ValidationMessageFor(model => model.VendorContact, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VendorPassword,"Enter Password", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-9" id="disfromlabel">
                        @Html.PasswordFor(model => model.VendorPassword, new { @class = "form-control", @id = "pasfocus" })
                      <br />  @Html.ValidationMessageFor(model => model.VendorPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.SellingCategory,"Selling Category", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-9" id="disfromlabel">

                        <div id="chbx">
                            @if (ViewBag.sellingcat != null)
                            {
                                List<SellingCategoryModel> a = new List<SellingCategoryModel>();
                                a = ViewBag.sellingcat;
                                for(int i = 0; i < a.Count; i++)
                                {
                                    @Html.CheckBox("hobby[" + i + "].IsChecked", a[i].IsChecked)
                                    @a[i].hobbyname
                                    @Html.Hidden("hobby[" + i + "].Id", a[i].Id)
                                    @Html.Hidden("hobby[" + i + "].hobbyname", a[i].hobbyname)
                                    <br />
                                }
                            }
                            
                            @Html.ValidationMessageFor(model => model.SellingCategory, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Register" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
</div>
</body>
</html>

<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/cupertino/jquery-ui.css" type="text/css" rel="Stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<script>
//For not accepting numeric values
               $( document ).ready(function() {
                   $("#numb").keypress(function (e) {
                       var key = e.which;
                       if (key >= 48 && key <= 57) {
                           e.preventDefault();
                       }
                   });

                   $("#alpha").keydown(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });

                   //autofocus when mouse enters in on textfield
                   $("#numb").mouseenter(function () {
                       $("#numb").focus();
                   });

                   $("#emlfocus").mouseenter(function () {
                       $("#emlfocus").focus();
                   });

                   $("#alpha").mouseenter(function () {
                       $("#alpha").focus();
                   });

                   $("#pasfocus").mouseenter(function () {
                       $("#pasfocus").focus();
                   });
               });
</script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
