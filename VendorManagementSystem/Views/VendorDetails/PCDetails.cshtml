@model VendorManagementSystem.ProjectViewModel.VendorViewDetails
    @using VendorManagementSystem.ProjectViewModel

@{
    ViewBag.Title = "PCDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<html>
<head>
    <link href="~/Content/Margin.css" rel="stylesheet" />
    <style>
        #xyz{
            margin-right:300px;
        }
        h4{
            color:red;
        }
        #a{
            margin-left:60px;
        }
    </style>
</head>
<body>

    <ol class="breadcrumb">
        @*<li><a href="HomePage">VMSHome</a></li>
        <li><a href= "vendor">PersonalDetails</a></li>*@
        <li class="active">CompanyDetails</li>
    </ol>

    @if (ViewBag.errormessage != null)
    {
        <h4>@ViewBag.errormessage</h4>
    }
    <div id="mrgn">
        <h2>
            General Details
        </h2>
        <div>
            <h5>Please enter Age between 18 to 80.</h5>
        </div>
    </div>

    <div id="bdymrgn">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                   
                    @Html.LabelFor(model => model.NumberofProducts,"Total Product", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                      <div class="col-md-10" id="disfromlabel">
                        @Html.EditorFor(model => model.NumberofProducts, new { htmlAttributes = new { @class = "form-control", MaxLength = "5", @id = "alpha" } })
                          @Html.ValidationMessageFor(model => model.NumberofProducts, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                   
                    @Html.LabelFor(model => model.MinPrice,"Price Range", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                     <div class="col-md-10" id="disfromlabel">
                        @Html.EditorFor(model => model.MinPrice, new { htmlAttributes = new { @id = "xyz1", MaxLength = "8" } })
                         @Html.ValidationMessageFor(model => model.MinPrice, "", new { @class = "text-danger" })
                        <br /> <label id="a">To</label>
                        @Html.EditorFor(model => model.MaxPrice, new { htmlAttributes = new { @id = "xyz", MaxLength = "8" } })
                         @Html.ValidationMessageFor(model => model.MaxPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                  
                    @Html.LabelFor(model => model.AlreadySellingOnline,"Online Seller?", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                     <div class="col-md-10" id="disfromlabel">
                        @Html.RadioButtonFor(model => model.AlreadySellingOnline, "Yes", new { htmlAttributes = new { @class = "form-control" } })<label>YES</label>
                        @Html.RadioButtonFor(model => model.AlreadySellingOnline, "No", new { htmlAttributes = new { @class = "form-control" } })<label>NO</label>
                       <br />  @Html.ValidationMessageFor(model => model.AlreadySellingOnline, "", new { @class = "text-danger" })
                     </div>
                </div>

                <div class="form-group">
                   
                    @Html.LabelFor(model => model.NatureOfBusiness,"Business Mode", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                     <div class="col-md-9" id="disfromlabel">
                        @Html.DropDownListFor(model => model.NatureOfBusiness, new SelectList(Enum.GetValues(typeof(NOBuss))), "--Select Category--", new { htmlAttributes = new { @class = "form-control" } })
                       <br />  @Html.ValidationMessageFor(model => model.NatureOfBusiness, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                   
                    @Html.LabelFor(model => model.OperatingFrom,"Location", htmlAttributes: new { @class = "control-label col-md-3", @id = "lname" })
                    <div class="col-md-10" id="disfromlabel">
                        @Html.DropDownListFor(model => model.OperatingFrom, new SelectList(Enum.GetValues(typeof(OptFrom))), "--Select Category--", new { htmlAttributes = new { @class = "form-control" } })
                    <br />    @Html.ValidationMessageFor(model => model.OperatingFrom, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                   
                    @Html.LabelFor(model => model.HandleBy,"Who'll Handle", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                     <div class="col-md-10" id="disfromlabel">
                        @Html.DropDownListFor(model => model.HandleBy, new SelectList(Enum.GetValues(typeof(handlyby))), "--Select Category--", new { htmlAttributes = new { @class = "form-control" } })
                     <br />    @Html.ValidationMessageFor(model => model.HandleBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                  
                    @Html.LabelFor(model => model.Gender,"Gender", htmlAttributes: new { @class = "control-label col-md-3", @id = "lname" })
                     <div class="col-md-10" id="disfromlabel">
                        @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } }) <label>Male</label>
                        @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } }) <label>Female</label><br />
                       @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                 
                    @Html.LabelFor(model => model.Age,"Age", htmlAttributes: new { @class = "control-label col-md-3", @id = "lname" })
                      <div class="col-md-10" id="disfromlabel">
                        @Html.TextBoxFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @id = "alpha2", MaxLength = "3" } })
                          <br />    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save and Next" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
</div>

</body>
</html>

<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/cupertino/jquery-ui.css" type="text/css" rel="Stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<script>
//For not accepting numeric values
               $( document ).ready(function() {
                   $("#numb").keypress(function (e) {
                       var key = e.which;
                       if (key >= 48 && key <= 57) {
                           e.preventDefault();
                       }
                   });

                   $("#alpha2").keydown(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });

                   $("#xyz").keydown(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });
                   $("#xyz1").keyup(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });
               });
</script>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
