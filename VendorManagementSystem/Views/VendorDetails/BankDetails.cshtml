@model VendorManagementSystem.ProjectViewModel.BankDetailsView
@using VendorManagementSystem.ProjectViewModel

@{
    ViewBag.Title = "BankDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html>
<head>
    <link href="~/Content/Margin.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.3.1.min.js" type="text/javascript"></script>
    <style type="text/css">
        select{
            width:200px;
        }
    </style>
    
    <script type="text/javascript">
        $(document).ready(function () {
            $('#comboboxCountry').on('change', function () {
                var countryId = $('#comboboxCountry option:selected').val();
                $.ajax({
                    type: 'GET',
                    data: { countryId: countryId },
                    url: '@Url.Action("loadStates","VendorDetails")',
                    success: function (result) {
                        var s = '<option value = "-1">--select state--</option>';
                        for(var i = 0; i < result.length; i++)
                        {
                            s += '<option value = " '+ result[i].Id +' ">'+result[i].Name+'</option>';
                        }
                        $('#comboboxState').html(s);
                    }
                })
            })
        })
    </script>

            @*$('#comboboxState').on('change', function () {
            var StateId = $('#comboboxState option:selected').val();
            $.ajax({
                type: 'GET',
                data: { stateId: stateId },
                url: '@Url.Action("loadCities","VendorDetails")',
                success: function (result) {
                    var s = '<option value = "-1">--select city--</option>';
                    for (var i = 0; i < result.length; i++) {
                        s += '<option value = " ' + result[i].Id + ' ">' + result[i].Name + '</option>';
                    }
                    $('#comboboxCity').html(s);
                }
            });
        });


    });

    ;*@
   
    <script>//Account number validation
            $(document).ready(function () {

                $("#btnSbmt").click(function () {
                    var password = $("#pass").val();
                    var confirmPassword = $("#repass").val();
                    if (password != confirmPassword) {
                        alert("Passwords do not match.");
                        return false;
                    }
                    return true;
                });
            });

    </script>

    
</head>
<body>

    <ol class="breadcrumb">
        <li><a href="PCDetails">PersonalDetails</a></li>
        <li><a href="BusinessDetails">CompanyLegalInformation</a></li>
        <li class="active">BankDetails</li>
    </ol>

    <div id="mrgn">
        <h2>
            Bank Details
        </h2>
        <div>
            <h5>#Please Upload only dpf file.</h5>
        </div>

    </div>
    <div id="bdymrgn">
        @using (Html.BeginForm("BankDetails", "VendorDetails", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountHoderName,"Account Holder Name", htmlAttributes: new { @class = "control-label col-md-6", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.EditorFor(model => model.AccountHoderName, new { htmlAttributes = new { @class = "form-control" , MaxLength = "30",@id = "numb"} })
                        @Html.ValidationMessageFor(model => model.AccountHoderName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AccountNumber,"Account Number", htmlAttributes: new { @class = "control-label col-md-5", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", @id="pass", MaxLength = "16" } })
                        @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ReTypeAccountNumber, "Retype Account Number", htmlAttributes: new { @class = "control-label col-md-6", @id = "lname" })
                    <div class="col-md-10" id="disfromlabel">
                        @Html.EditorFor(model => model.ReTypeAccountNumber, new { htmlAttributes = new { @class = "form-control", @id = "repass", MaxLength = "16" } })
                        @Html.ValidationMessageFor(model => model.ReTypeAccountNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IFSC,"IFSC Code", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.EditorFor(model => model.IFSC, new { htmlAttributes = new { @class = "form-control", MaxLength = "8" } })
                        @Html.ValidationMessageFor(model => model.IFSC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.BankName,"Bank Name", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.DropDownListFor(model => model.BankName, new SelectList(Enum.GetValues(typeof(Bank))), "--Select Bank--", new { htmlAttributes = new { @class = "form-control" } })
                       <br /> @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country,"Country Name", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        <select id="comboboxCountry">
                            <option value="-1">--Select Country--</option>
                            @foreach(var country in ViewBag.CountryList)
                            {
                                <option value="@country.CountryId">@country.CountryName</option>
                            }
                        </select>
                        <br />@Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StateName,"State Name", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        <select id="comboboxState">
                            
                        </select>
                        <br /> @Html.ValidationMessageFor(model => model.StateName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-group">
                    @Html.LabelFor(model => model.City,"City_Name", htmlAttributes: new { @class = "control-label col-md-2", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        <select id="comboboxCity">

                        </select>
                       <br /> @Html.ValidationMessageFor(model => model.City, "*", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.PanCard,"Pancard Number", htmlAttributes: new { @class = "control-label col-md-5", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.EditorFor(model => model.PanCard, new { htmlAttributes = new { @class = "form-control", MaxLength = "16" , @id = "alphanumb"} })
                        @Html.ValidationMessageFor(model => model.PanCard, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PancardDocument, "Pancard Document", htmlAttributes: new { @class = "control-label col-md-5", @id = "lname" })
                    <div class="col-md-10" id="disfromlabel">
                        @Html.TextBox("file", "", new { type = "file" })
                        @Html.ValidationMessageFor(model => model.PancardDocument, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressProof,"Address Proof", htmlAttributes: new { @class = "control-label col-md-4", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.DropDownListFor(model => model.AddressProof, new SelectList(Enum.GetValues(typeof(AddressProof))), "--Select Category--", new { htmlAttributes = new { @class = "form-control" } })
                       <br /> @Html.ValidationMessageFor(model => model.AddressProof, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressProofDocument, "Address Proof Document", htmlAttributes: new { @class = "control-label col-md-6", @id = "lname" })
                    <div class="col-md-10" id="disfromlabel">
                       @Html.TextBox("file1", "", new { type = "file" })
                        @Html.ValidationMessageFor(model => model.AddressProofDocument, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CancelledCheque,"Canncelled Cheque", htmlAttributes: new { @class = "control-label col-md-5", @id = "lname" })
                    <div class="col-md-10"  id="disfromlabel">
                        @Html.TextBox("file2", "", new { type = "file" })
                        @Html.ValidationMessageFor(model => model.CancelledCheque, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save Details" class="btn btn-default" id="btnsbmt"/>
                    </div>
                </div>
            </div>
        }
</div>

</body>
</html>


<link href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/cupertino/jquery-ui.css" type="text/css" rel="Stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.4/jquery.min.js" type="text/javascript"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>
<script>
//For not accepting numeric values
               $( document ).ready(function() {
                   $("#numb").keypress(function (e) {
                       var key = e.which;
                       if (key >= 48 && key <= 57) {
                           e.preventDefault();
                       }
                   });

                   $("#pass").keydown(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });

                   $("#repass").keydown(function (e) {
                       var key = e.which;
                       if (key >= 65 && key <= 90) {
                           e.preventDefault();
                       }
                   });
                   $("#alphanumb").keypress(function (e) {
                       var key = e.which;
                       if (key <= 48 && key >= 90) {
                           e.preventDefault();
                       }
                   });
               });
</script>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
